const svgCaptcha = require('svg-captcha');
const countryService = require('./countryService');
const fs = require('fs');
const path = require('path');

class ImageService {
  constructor() {
    this.cacheDir = path.join(__dirname, '../cache');
    this.ensureCacheDir();
  }

  ensureCacheDir() {
    if (!fs.existsSync(this.cacheDir)) {
      fs.mkdirSync(this.cacheDir, { recursive: true });
    }
  }

  async generateSummaryImage() {
    try {
      const topCountries = await countryService.getTopCountriesByGDP(5);
      const status = await countryService.getStatus();

      // Create SVG content
      const svgContent = this.generateSVGContent(topCountries, status);
      
      // Save SVG to cache directory
      const imagePath = path.join(this.cacheDir, 'summary.svg');
      fs.writeFileSync(imagePath, svgContent);

      console.log('Summary image generated successfully');
      return imagePath;
    } catch (error) {
      console.error('Image generation error:', error);
      throw error;
    }
  }

  generateSVGContent(topCountries, status) {
    const width = 800;
    const height = 600;
    
    let svg = `<?xml version="1.0" encoding="UTF-8"?>
<svg width="${width}" height="${height}" xmlns="http://www.w3.org/2000/svg">
  <style>
    .title { font: bold 32px Arial; fill: #2c3e50; }
    .header { font: bold 20px Arial; fill: #2c3e50; }
    .subheader { font: bold 24px Arial; fill: #2c3e50; }
    .body { font: 18px Arial; fill: #34495e; }
    .footer { font: 14px Arial; fill: #7f8c8d; }
    .background { fill: #ffffff; }
  </style>
  
  <!-- Background -->
  <rect width="100%" height="100%" fill="#ffffff"/>
  
  <!-- Title -->
  <text x="400" y="60" text-anchor="middle" class="title">Countries Summary Report</text>
  
  <!-- Total Countries -->
  <text x="50" y="120" class="header">Total Countries: ${status.total_countries}</text>
  
  <!-- Last Refresh -->
  <text x="50" y="160" class="header">Last Refresh: ${new Date(status.last_refreshed_at).toLocaleString()}</text>
  
  <!-- Top Countries Title -->
  <text x="50" y="220" class="subheader">Top 5 Countries by Estimated GDP:</text>`;
    
    // Top Countries List
    let yPosition = 260;
    topCountries.forEach((country, index) => {
      const gdpFormatted = new Intl.NumberFormat('en-US', {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      }).format(country.estimated_gdp / 1e9); // Convert to billions
      
      svg += `
  <text x="70" y="${yPosition}" class="body">${index + 1}. ${country.name}: ${gdpFormatted}B</text>`;
      yPosition += 35;
    });

    // Footer
    svg += `
  <text x="400" y="580" text-anchor="middle" class="footer">Generated by Country Currency API</text>
</svg>`;

    return svg;
  }

  getImagePath() {
    const imagePath = path.join(this.cacheDir, 'summary.svg');
    return fs.existsSync(imagePath) ? imagePath : null;
  }
}

module.exports = new ImageService();